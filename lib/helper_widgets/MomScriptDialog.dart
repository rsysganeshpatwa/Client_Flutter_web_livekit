// ignore_for_file: file_names

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

/// A dialog that displays meeting minutes generated by the Mom Agent
class MomScriptDialog extends StatelessWidget {
  /// The meeting script/minutes to display
  final String script;
  
  /// Optional meeting title to display in the header
  final String? meetingTitle;

  const MomScriptDialog({
    Key? key,
    required this.script,
    this.meetingTitle,
  }) : super(key: key);

  /// Static helper method to show the dialog
  static Future<void> show(BuildContext context, String script, {String? meetingTitle}) {
    return showDialog(
      context: context,
      builder: (BuildContext context) => MomScriptDialog(
        script: script,
        meetingTitle: meetingTitle,
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Dialog(
      backgroundColor: Colors.transparent,
      elevation: 0,
      child: Container(
        width: MediaQuery.of(context).size.width * 0.7,
        constraints: const BoxConstraints(maxWidth: 700),
        padding: const EdgeInsets.all(0),
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.circular(12),
          boxShadow: [
            BoxShadow(
              color: Colors.black.withOpacity(0.3),
              blurRadius: 15,
              spreadRadius: 5,
            ),
          ],
        ),
        child: Column(
          mainAxisSize: MainAxisSize.min,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            // Header
            Container(
              padding: const EdgeInsets.all(16),
              decoration: const BoxDecoration(
                color: Color(0xFF3F51B5),
                borderRadius: BorderRadius.only(
                  topLeft: Radius.circular(12),
                  topRight: Radius.circular(12),
                ),
              ),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Expanded(
                    child: Row(
                      children: [
                        const Icon(
                          Icons.description,
                          color: Colors.white,
                          size: 24,
                        ),
                        const SizedBox(width: 12),
                        Expanded(
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              const Text(
                                'Meeting Minutes',
                                style: TextStyle(
                                  fontSize: 18,
                                  fontWeight: FontWeight.bold,
                                  color: Colors.white,
                                ),
                              ),
                              if (meetingTitle != null && meetingTitle!.isNotEmpty)
                                Text(
                                  meetingTitle!,
                                  style: const TextStyle(
                                    fontSize: 14,
                                    color: Colors.white70,
                                  ),
                                  overflow: TextOverflow.ellipsis,
                                ),
                            ],
                          ),
                        ),
                      ],
                    ),
                  ),
                  IconButton(
                    icon: const Icon(Icons.close, color: Colors.white),
                    onPressed: () => Navigator.pop(context),
                    splashRadius: 20,
                    tooltip: 'Close',
                  ),
                ],
              ),
            ),
            
            // Content
            Container(
              constraints: BoxConstraints(
                maxHeight: MediaQuery.of(context).size.height * 0.6,
              ),
              padding: const EdgeInsets.all(16),
              child: SingleChildScrollView(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const Text(
                      'Summary',
                      style: TextStyle(
                        fontSize: 16,
                        fontWeight: FontWeight.bold,
                        color: Color(0xFF3F51B5),
                      ),
                    ),
                    const SizedBox(height: 8),
                    _buildScriptContent(),
                  ],
                ),
              ),
            ),
            
            // Buttons
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.grey[100],
                borderRadius: const BorderRadius.only(
                  bottomLeft: Radius.circular(12),
                  bottomRight: Radius.circular(12),
                ),
              ),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.end,
                children: [
                  ElevatedButton.icon(
                    icon: const Icon(Icons.copy),
                    label: const Text('Copy'),
                    style: ElevatedButton.styleFrom(
                      backgroundColor: const Color(0xFF3F51B5),
                      foregroundColor: Colors.white,
                      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 10),
                    ),
                    onPressed: () => _copyToClipboard(context),
                  ),
                  const SizedBox(width: 12),
                  TextButton(
                    child: const Text('Close'),
                    style: TextButton.styleFrom(
                      foregroundColor: const Color(0xFF3F51B5),
                      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 10),
                    ),
                    onPressed: () => Navigator.pop(context),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  /// Builds the script content container with appropriate styling
  Widget _buildScriptContent() {
    // Check if script contains HTML-like formatting
    bool containsHtml = script.contains('<') && script.contains('>');
    
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.grey[100],
        borderRadius: BorderRadius.circular(8),
        border: Border.all(
          color: Colors.grey[300]!,
          width: 1,
        ),
      ),
      child: containsHtml 
          ? _buildStructuredContent() 
          : Text(
              script,
              style: const TextStyle(
                fontSize: 14,
                height: 1.5,
                color: Colors.black87,
              ),
            ),
    );
  }

  /// Builds structured content if the script contains HTML-like formatting
  Widget _buildStructuredContent() {
    // This is a simple implementation - for proper HTML rendering,
    // you might want to use a package like flutter_html
    return Text(
      script.replaceAll(RegExp(r'<[^>]*>'), ''), // Simple HTML tag removal
      style: const TextStyle(
        fontSize: 14,
        height: 1.5,
        color: Colors.black87,
      ),
    );
  }

  /// Copies the script content to clipboard and shows a snackbar
  void _copyToClipboard(BuildContext context) {
    // If script contains HTML, strip tags before copying
    final textToCopy = script.contains('<') && script.contains('>')
        ? script.replaceAll(RegExp(r'<[^>]*>'), '')
        : script;
    
    Clipboard.setData(ClipboardData(text: textToCopy));
    ScaffoldMessenger.of(context).showSnackBar(
      const SnackBar(
        content: Text('Meeting minutes copied to clipboard'),
        behavior: SnackBarBehavior.floating,
        duration: Duration(seconds: 2),
      ),
    );
  }
}